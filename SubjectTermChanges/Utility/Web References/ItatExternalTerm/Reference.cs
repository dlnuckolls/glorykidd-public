//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Kindred.Knect.ITAT.Utility.ItatExternalTerm {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IItatExternalTerm", Namespace="http://kindredhealthcare.com")]
    public partial class ItatExternalTerm : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFilterCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilteredDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ItatExternalTerm() {
            this.Url = global::Kindred.Knect.ITAT.Utility.Properties.Settings.Default.Utility_ItatExternalTerm_ItatExternalTerm;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFilterCatalogCompletedEventHandler GetFilterCatalogCompleted;
        
        /// <remarks/>
        public event GetAvailableColumnsCompletedEventHandler GetAvailableColumnsCompleted;
        
        /// <remarks/>
        public event GetFilterListCompletedEventHandler GetFilterListCompleted;
        
        /// <remarks/>
        public event GetFilteredDataCompletedEventHandler GetFilteredDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kindredhealthcare.com/webservices/GetFilterCatalog", RequestNamespace="http://kindredhealthcare.com/webservices/", ResponseNamespace="http://kindredhealthcare.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetFilterCatalog() {
            object[] results = this.Invoke("GetFilterCatalog", new object[0]);
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilterCatalogAsync() {
            this.GetFilterCatalogAsync(null);
        }
        
        /// <remarks/>
        public void GetFilterCatalogAsync(object userState) {
            if ((this.GetFilterCatalogOperationCompleted == null)) {
                this.GetFilterCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilterCatalogOperationCompleted);
            }
            this.InvokeAsync("GetFilterCatalog", new object[0], this.GetFilterCatalogOperationCompleted, userState);
        }
        
        private void OnGetFilterCatalogOperationCompleted(object arg) {
            if ((this.GetFilterCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilterCatalogCompleted(this, new GetFilterCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kindredhealthcare.com/webservices/GetAvailableColumns", RequestNamespace="http://kindredhealthcare.com/webservices/", ResponseNamespace="http://kindredhealthcare.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAvailableColumns() {
            object[] results = this.Invoke("GetAvailableColumns", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableColumnsAsync() {
            this.GetAvailableColumnsAsync(null);
        }
        
        /// <remarks/>
        public void GetAvailableColumnsAsync(object userState) {
            if ((this.GetAvailableColumnsOperationCompleted == null)) {
                this.GetAvailableColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableColumnsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableColumns", new object[0], this.GetAvailableColumnsOperationCompleted, userState);
        }
        
        private void OnGetAvailableColumnsOperationCompleted(object arg) {
            if ((this.GetAvailableColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableColumnsCompleted(this, new GetAvailableColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kindredhealthcare.com/webservices/GetFilterList", RequestNamespace="http://kindredhealthcare.com/webservices/", ResponseNamespace="http://kindredhealthcare.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetFilterList(string filterName, string[] allowedValues) {
            object[] results = this.Invoke("GetFilterList", new object[] {
                        filterName,
                        allowedValues});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilterListAsync(string filterName, string[] allowedValues) {
            this.GetFilterListAsync(filterName, allowedValues, null);
        }
        
        /// <remarks/>
        public void GetFilterListAsync(string filterName, string[] allowedValues, object userState) {
            if ((this.GetFilterListOperationCompleted == null)) {
                this.GetFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilterListOperationCompleted);
            }
            this.InvokeAsync("GetFilterList", new object[] {
                        filterName,
                        allowedValues}, this.GetFilterListOperationCompleted, userState);
        }
        
        private void OnGetFilterListOperationCompleted(object arg) {
            if ((this.GetFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilterListCompleted(this, new GetFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kindredhealthcare.com/webservices/GetFilteredData", RequestNamespace="http://kindredhealthcare.com/webservices/", ResponseNamespace="http://kindredhealthcare.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFilteredData([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] filterCriteria) {
            object[] results = this.Invoke("GetFilteredData", new object[] {
                        filterCriteria});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilteredDataAsync(string[][] filterCriteria) {
            this.GetFilteredDataAsync(filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetFilteredDataAsync(string[][] filterCriteria, object userState) {
            if ((this.GetFilteredDataOperationCompleted == null)) {
                this.GetFilteredDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilteredDataOperationCompleted);
            }
            this.InvokeAsync("GetFilteredData", new object[] {
                        filterCriteria}, this.GetFilteredDataOperationCompleted, userState);
        }
        
        private void OnGetFilteredDataOperationCompleted(object arg) {
            if ((this.GetFilteredDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilteredDataCompleted(this, new GetFilteredDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFilterCatalogCompletedEventHandler(object sender, GetFilterCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilterCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilterCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableColumnsCompletedEventHandler(object sender, GetAvailableColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFilterListCompletedEventHandler(object sender, GetFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFilteredDataCompletedEventHandler(object sender, GetFilteredDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilteredDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilteredDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591