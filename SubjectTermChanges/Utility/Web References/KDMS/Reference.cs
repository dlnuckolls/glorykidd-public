//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Kindred.Knect.ITAT.Utility.KDMS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.kindredhealthcare.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback LDAPUpdateUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LDAPUpdateGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LDAPUpdateMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckObjectID1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookUpValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback Search1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDocumentContentByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDocumentsContentByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDocumentContentByChronicleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDocumentsContentByChronicleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileBrowseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDocumentContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDocumentsContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentPropertiesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Kindred.Knect.ITAT.Utility.Properties.Settings.Default.Knect_ITAT_Utility_KDMS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessTasksCompletedEventHandler ProcessTasksCompleted;
        
        /// <remarks/>
        public event LDAPUpdateUsersCompletedEventHandler LDAPUpdateUsersCompleted;
        
        /// <remarks/>
        public event LDAPUpdateGroupsCompletedEventHandler LDAPUpdateGroupsCompleted;
        
        /// <remarks/>
        public event LDAPUpdateMembershipCompletedEventHandler LDAPUpdateMembershipCompleted;
        
        /// <remarks/>
        public event CheckObjectIDCompletedEventHandler CheckObjectIDCompleted;
        
        /// <remarks/>
        public event CheckObjectID1CompletedEventHandler CheckObjectID1Completed;
        
        /// <remarks/>
        public event GetLookUpValuesCompletedEventHandler GetLookUpValuesCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event Search1CompletedEventHandler Search1Completed;
        
        /// <remarks/>
        public event ExportDocumentContentByPathCompletedEventHandler ExportDocumentContentByPathCompleted;
        
        /// <remarks/>
        public event ExportDocumentsContentByPathCompletedEventHandler ExportDocumentsContentByPathCompleted;
        
        /// <remarks/>
        public event ExportDocumentContentByChronicleIDCompletedEventHandler ExportDocumentContentByChronicleIDCompleted;
        
        /// <remarks/>
        public event ExportDocumentsContentByChronicleIDCompletedEventHandler ExportDocumentsContentByChronicleIDCompleted;
        
        /// <remarks/>
        public event FileBrowseCompletedEventHandler FileBrowseCompleted;
        
        /// <remarks/>
        public event ImportDocumentsCompletedEventHandler ImportDocumentsCompleted;
        
        /// <remarks/>
        public event ImportDocumentContentCompletedEventHandler ImportDocumentContentCompleted;
        
        /// <remarks/>
        public event ImportDocumentsContentCompletedEventHandler ImportDocumentsContentCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event UpdateDocumentPropertiesCompletedEventHandler UpdateDocumentPropertiesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ProcessTasks", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessTasks() {
            this.Invoke("ProcessTasks", new object[0]);
        }
        
        /// <remarks/>
        public void ProcessTasksAsync() {
            this.ProcessTasksAsync(null);
        }
        
        /// <remarks/>
        public void ProcessTasksAsync(object userState) {
            if ((this.ProcessTasksOperationCompleted == null)) {
                this.ProcessTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessTasksOperationCompleted);
            }
            this.InvokeAsync("ProcessTasks", new object[0], this.ProcessTasksOperationCompleted, userState);
        }
        
        private void OnProcessTasksOperationCompleted(object arg) {
            if ((this.ProcessTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessTasksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/LDAPUpdateUsers", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LDAPUpdateUsers() {
            this.Invoke("LDAPUpdateUsers", new object[0]);
        }
        
        /// <remarks/>
        public void LDAPUpdateUsersAsync() {
            this.LDAPUpdateUsersAsync(null);
        }
        
        /// <remarks/>
        public void LDAPUpdateUsersAsync(object userState) {
            if ((this.LDAPUpdateUsersOperationCompleted == null)) {
                this.LDAPUpdateUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLDAPUpdateUsersOperationCompleted);
            }
            this.InvokeAsync("LDAPUpdateUsers", new object[0], this.LDAPUpdateUsersOperationCompleted, userState);
        }
        
        private void OnLDAPUpdateUsersOperationCompleted(object arg) {
            if ((this.LDAPUpdateUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LDAPUpdateUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/LDAPUpdateGroups", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LDAPUpdateGroups() {
            this.Invoke("LDAPUpdateGroups", new object[0]);
        }
        
        /// <remarks/>
        public void LDAPUpdateGroupsAsync() {
            this.LDAPUpdateGroupsAsync(null);
        }
        
        /// <remarks/>
        public void LDAPUpdateGroupsAsync(object userState) {
            if ((this.LDAPUpdateGroupsOperationCompleted == null)) {
                this.LDAPUpdateGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLDAPUpdateGroupsOperationCompleted);
            }
            this.InvokeAsync("LDAPUpdateGroups", new object[0], this.LDAPUpdateGroupsOperationCompleted, userState);
        }
        
        private void OnLDAPUpdateGroupsOperationCompleted(object arg) {
            if ((this.LDAPUpdateGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LDAPUpdateGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/LDAPUpdateMembership", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LDAPUpdateMembership() {
            this.Invoke("LDAPUpdateMembership", new object[0]);
        }
        
        /// <remarks/>
        public void LDAPUpdateMembershipAsync() {
            this.LDAPUpdateMembershipAsync(null);
        }
        
        /// <remarks/>
        public void LDAPUpdateMembershipAsync(object userState) {
            if ((this.LDAPUpdateMembershipOperationCompleted == null)) {
                this.LDAPUpdateMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLDAPUpdateMembershipOperationCompleted);
            }
            this.InvokeAsync("LDAPUpdateMembership", new object[0], this.LDAPUpdateMembershipOperationCompleted, userState);
        }
        
        private void OnLDAPUpdateMembershipOperationCompleted(object arg) {
            if ((this.LDAPUpdateMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LDAPUpdateMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/CheckObjectID", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckObjectID(string NTID, string OBJECTID) {
            object[] results = this.Invoke("CheckObjectID", new object[] {
                        NTID,
                        OBJECTID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckObjectIDAsync(string NTID, string OBJECTID) {
            this.CheckObjectIDAsync(NTID, OBJECTID, null);
        }
        
        /// <remarks/>
        public void CheckObjectIDAsync(string NTID, string OBJECTID, object userState) {
            if ((this.CheckObjectIDOperationCompleted == null)) {
                this.CheckObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckObjectIDOperationCompleted);
            }
            this.InvokeAsync("CheckObjectID", new object[] {
                        NTID,
                        OBJECTID}, this.CheckObjectIDOperationCompleted, userState);
        }
        
        private void OnCheckObjectIDOperationCompleted(object arg) {
            if ((this.CheckObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckObjectIDCompleted(this, new CheckObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="CheckObjectID1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/CheckObjectIDSuperUser", RequestElementName="CheckObjectIDSuperUser", RequestNamespace="http://www.kindredhealthcare.com/", ResponseElementName="CheckObjectIDSuperUserResponse", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CheckObjectIDSuperUserResult")]
        public string CheckObjectID(string OBJECTID) {
            object[] results = this.Invoke("CheckObjectID1", new object[] {
                        OBJECTID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckObjectID1Async(string OBJECTID) {
            this.CheckObjectID1Async(OBJECTID, null);
        }
        
        /// <remarks/>
        public void CheckObjectID1Async(string OBJECTID, object userState) {
            if ((this.CheckObjectID1OperationCompleted == null)) {
                this.CheckObjectID1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckObjectID1OperationCompleted);
            }
            this.InvokeAsync("CheckObjectID1", new object[] {
                        OBJECTID}, this.CheckObjectID1OperationCompleted, userState);
        }
        
        private void OnCheckObjectID1OperationCompleted(object arg) {
            if ((this.CheckObjectID1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckObjectID1Completed(this, new CheckObjectID1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/GetLookUpValues", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLookUpValues(string DOCTYPE, string PROPNAME) {
            object[] results = this.Invoke("GetLookUpValues", new object[] {
                        DOCTYPE,
                        PROPNAME});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLookUpValuesAsync(string DOCTYPE, string PROPNAME) {
            this.GetLookUpValuesAsync(DOCTYPE, PROPNAME, null);
        }
        
        /// <remarks/>
        public void GetLookUpValuesAsync(string DOCTYPE, string PROPNAME, object userState) {
            if ((this.GetLookUpValuesOperationCompleted == null)) {
                this.GetLookUpValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookUpValuesOperationCompleted);
            }
            this.InvokeAsync("GetLookUpValues", new object[] {
                        DOCTYPE,
                        PROPNAME}, this.GetLookUpValuesOperationCompleted, userState);
        }
        
        private void OnGetLookUpValuesOperationCompleted(object arg) {
            if ((this.GetLookUpValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookUpValuesCompleted(this, new GetLookUpValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/Search", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Search(string NTID, string FOLDERPATH, string SEARCHSTRING) {
            object[] results = this.Invoke("Search", new object[] {
                        NTID,
                        FOLDERPATH,
                        SEARCHSTRING});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string NTID, string FOLDERPATH, string SEARCHSTRING) {
            this.SearchAsync(NTID, FOLDERPATH, SEARCHSTRING, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string NTID, string FOLDERPATH, string SEARCHSTRING, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        NTID,
                        FOLDERPATH,
                        SEARCHSTRING}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="Search1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/Advanced Search", RequestElementName="Advanced Search", RequestNamespace="http://www.kindredhealthcare.com/", ResponseElementName="Advanced SearchResponse", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Advanced SearchResult")]
        public string Search(string NTID, SearchConfiguration sc) {
            object[] results = this.Invoke("Search1", new object[] {
                        NTID,
                        sc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Search1Async(string NTID, SearchConfiguration sc) {
            this.Search1Async(NTID, sc, null);
        }
        
        /// <remarks/>
        public void Search1Async(string NTID, SearchConfiguration sc, object userState) {
            if ((this.Search1OperationCompleted == null)) {
                this.Search1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearch1OperationCompleted);
            }
            this.InvokeAsync("Search1", new object[] {
                        NTID,
                        sc}, this.Search1OperationCompleted, userState);
        }
        
        private void OnSearch1OperationCompleted(object arg) {
            if ((this.Search1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Search1Completed(this, new Search1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ExportDocumentContentByPath", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExportDocumentContentByPath(string docPath, out string contentType) {
            object[] results = this.Invoke("ExportDocumentContentByPath", new object[] {
                        docPath});
            contentType = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExportDocumentContentByPathAsync(string docPath) {
            this.ExportDocumentContentByPathAsync(docPath, null);
        }
        
        /// <remarks/>
        public void ExportDocumentContentByPathAsync(string docPath, object userState) {
            if ((this.ExportDocumentContentByPathOperationCompleted == null)) {
                this.ExportDocumentContentByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDocumentContentByPathOperationCompleted);
            }
            this.InvokeAsync("ExportDocumentContentByPath", new object[] {
                        docPath}, this.ExportDocumentContentByPathOperationCompleted, userState);
        }
        
        private void OnExportDocumentContentByPathOperationCompleted(object arg) {
            if ((this.ExportDocumentContentByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDocumentContentByPathCompleted(this, new ExportDocumentContentByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ExportDocumentsContentByPath", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] ExportDocumentsContentByPath(string[] docsPath, out string[] contentTypes) {
            object[] results = this.Invoke("ExportDocumentsContentByPath", new object[] {
                        docsPath});
            contentTypes = ((string[])(results[1]));
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void ExportDocumentsContentByPathAsync(string[] docsPath) {
            this.ExportDocumentsContentByPathAsync(docsPath, null);
        }
        
        /// <remarks/>
        public void ExportDocumentsContentByPathAsync(string[] docsPath, object userState) {
            if ((this.ExportDocumentsContentByPathOperationCompleted == null)) {
                this.ExportDocumentsContentByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDocumentsContentByPathOperationCompleted);
            }
            this.InvokeAsync("ExportDocumentsContentByPath", new object[] {
                        docsPath}, this.ExportDocumentsContentByPathOperationCompleted, userState);
        }
        
        private void OnExportDocumentsContentByPathOperationCompleted(object arg) {
            if ((this.ExportDocumentsContentByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDocumentsContentByPathCompleted(this, new ExportDocumentsContentByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ExportDocumentContentByChronicleID", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExportDocumentContentByChronicleID(string chronicleID, out string contentType) {
            object[] results = this.Invoke("ExportDocumentContentByChronicleID", new object[] {
                        chronicleID});
            contentType = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExportDocumentContentByChronicleIDAsync(string chronicleID) {
            this.ExportDocumentContentByChronicleIDAsync(chronicleID, null);
        }
        
        /// <remarks/>
        public void ExportDocumentContentByChronicleIDAsync(string chronicleID, object userState) {
            if ((this.ExportDocumentContentByChronicleIDOperationCompleted == null)) {
                this.ExportDocumentContentByChronicleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDocumentContentByChronicleIDOperationCompleted);
            }
            this.InvokeAsync("ExportDocumentContentByChronicleID", new object[] {
                        chronicleID}, this.ExportDocumentContentByChronicleIDOperationCompleted, userState);
        }
        
        private void OnExportDocumentContentByChronicleIDOperationCompleted(object arg) {
            if ((this.ExportDocumentContentByChronicleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDocumentContentByChronicleIDCompleted(this, new ExportDocumentContentByChronicleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ExportDocumentsContentByChronicleID", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] ExportDocumentsContentByChronicleID(string[] chronicleIDs, out string[] contentTypes) {
            object[] results = this.Invoke("ExportDocumentsContentByChronicleID", new object[] {
                        chronicleIDs});
            contentTypes = ((string[])(results[1]));
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void ExportDocumentsContentByChronicleIDAsync(string[] chronicleIDs) {
            this.ExportDocumentsContentByChronicleIDAsync(chronicleIDs, null);
        }
        
        /// <remarks/>
        public void ExportDocumentsContentByChronicleIDAsync(string[] chronicleIDs, object userState) {
            if ((this.ExportDocumentsContentByChronicleIDOperationCompleted == null)) {
                this.ExportDocumentsContentByChronicleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDocumentsContentByChronicleIDOperationCompleted);
            }
            this.InvokeAsync("ExportDocumentsContentByChronicleID", new object[] {
                        chronicleIDs}, this.ExportDocumentsContentByChronicleIDOperationCompleted, userState);
        }
        
        private void OnExportDocumentsContentByChronicleIDOperationCompleted(object arg) {
            if ((this.ExportDocumentsContentByChronicleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDocumentsContentByChronicleIDCompleted(this, new ExportDocumentsContentByChronicleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/FileBrowse", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FileBrowse(string NTID, string FOLDERPATH) {
            object[] results = this.Invoke("FileBrowse", new object[] {
                        NTID,
                        FOLDERPATH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FileBrowseAsync(string NTID, string FOLDERPATH) {
            this.FileBrowseAsync(NTID, FOLDERPATH, null);
        }
        
        /// <remarks/>
        public void FileBrowseAsync(string NTID, string FOLDERPATH, object userState) {
            if ((this.FileBrowseOperationCompleted == null)) {
                this.FileBrowseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileBrowseOperationCompleted);
            }
            this.InvokeAsync("FileBrowse", new object[] {
                        NTID,
                        FOLDERPATH}, this.FileBrowseOperationCompleted, userState);
        }
        
        private void OnFileBrowseOperationCompleted(object arg) {
            if ((this.FileBrowseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileBrowseCompleted(this, new FileBrowseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ImportDocuments", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportDocuments(string fileList) {
            this.Invoke("ImportDocuments", new object[] {
                        fileList});
        }
        
        /// <remarks/>
        public void ImportDocumentsAsync(string fileList) {
            this.ImportDocumentsAsync(fileList, null);
        }
        
        /// <remarks/>
        public void ImportDocumentsAsync(string fileList, object userState) {
            if ((this.ImportDocumentsOperationCompleted == null)) {
                this.ImportDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDocumentsOperationCompleted);
            }
            this.InvokeAsync("ImportDocuments", new object[] {
                        fileList}, this.ImportDocumentsOperationCompleted, userState);
        }
        
        private void OnImportDocumentsOperationCompleted(object arg) {
            if ((this.ImportDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDocumentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ImportDocumentContent", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportDocumentContent([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] docContent, string contentType, ImportConfiguration ic) {
            object[] results = this.Invoke("ImportDocumentContent", new object[] {
                        docContent,
                        contentType,
                        ic});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportDocumentContentAsync(byte[] docContent, string contentType, ImportConfiguration ic) {
            this.ImportDocumentContentAsync(docContent, contentType, ic, null);
        }
        
        /// <remarks/>
        public void ImportDocumentContentAsync(byte[] docContent, string contentType, ImportConfiguration ic, object userState) {
            if ((this.ImportDocumentContentOperationCompleted == null)) {
                this.ImportDocumentContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDocumentContentOperationCompleted);
            }
            this.InvokeAsync("ImportDocumentContent", new object[] {
                        docContent,
                        contentType,
                        ic}, this.ImportDocumentContentOperationCompleted, userState);
        }
        
        private void OnImportDocumentContentOperationCompleted(object arg) {
            if ((this.ImportDocumentContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDocumentContentCompleted(this, new ImportDocumentContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/ImportDocumentsContent", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ImportDocumentsContent(byte[][] docsContent, string[] contentTypes, ImportConfiguration[] ics) {
            object[] results = this.Invoke("ImportDocumentsContent", new object[] {
                        docsContent,
                        contentTypes,
                        ics});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ImportDocumentsContentAsync(byte[][] docsContent, string[] contentTypes, ImportConfiguration[] ics) {
            this.ImportDocumentsContentAsync(docsContent, contentTypes, ics, null);
        }
        
        /// <remarks/>
        public void ImportDocumentsContentAsync(byte[][] docsContent, string[] contentTypes, ImportConfiguration[] ics, object userState) {
            if ((this.ImportDocumentsContentOperationCompleted == null)) {
                this.ImportDocumentsContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDocumentsContentOperationCompleted);
            }
            this.InvokeAsync("ImportDocumentsContent", new object[] {
                        docsContent,
                        contentTypes,
                        ics}, this.ImportDocumentsContentOperationCompleted, userState);
        }
        
        private void OnImportDocumentsContentOperationCompleted(object arg) {
            if ((this.ImportDocumentsContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDocumentsContentCompleted(this, new ImportDocumentsContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/DeleteDocument", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteDocument(string OJBECTID, bool DestroyALL) {
            object[] results = this.Invoke("DeleteDocument", new object[] {
                        OJBECTID,
                        DestroyALL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(string OJBECTID, bool DestroyALL) {
            this.DeleteDocumentAsync(OJBECTID, DestroyALL, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(string OJBECTID, bool DestroyALL, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        OJBECTID,
                        DestroyALL}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kindredhealthcare.com/UpdateDocumentProperties", RequestNamespace="http://www.kindredhealthcare.com/", ResponseNamespace="http://www.kindredhealthcare.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDocumentProperties(string OJBECTID, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] object[][] PROPERTIES) {
            object[] results = this.Invoke("UpdateDocumentProperties", new object[] {
                        OJBECTID,
                        PROPERTIES});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentPropertiesAsync(string OJBECTID, object[][] PROPERTIES) {
            this.UpdateDocumentPropertiesAsync(OJBECTID, PROPERTIES, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentPropertiesAsync(string OJBECTID, object[][] PROPERTIES, object userState) {
            if ((this.UpdateDocumentPropertiesOperationCompleted == null)) {
                this.UpdateDocumentPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentPropertiesOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentProperties", new object[] {
                        OJBECTID,
                        PROPERTIES}, this.UpdateDocumentPropertiesOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentPropertiesOperationCompleted(object arg) {
            if ((this.UpdateDocumentPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentPropertiesCompleted(this, new UpdateDocumentPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.kindredhealthcare.com/")]
    public partial class SearchConfiguration {
        
        private string docTypeField;
        
        private bool findAllVersionsField;
        
        private string folderPathField;
        
        private string versionLabelField;
        
        private object[][] attributeLinesField;
        
        private object[][] displayAttributesField;
        
        private string searchStringField;
        
        private int resultLimitField;
        
        /// <remarks/>
        public string DocType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool FindAllVersions {
            get {
                return this.findAllVersionsField;
            }
            set {
                this.findAllVersionsField = value;
            }
        }
        
        /// <remarks/>
        public string FolderPath {
            get {
                return this.folderPathField;
            }
            set {
                this.folderPathField = value;
            }
        }
        
        /// <remarks/>
        public string VersionLabel {
            get {
                return this.versionLabelField;
            }
            set {
                this.versionLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] AttributeLines {
            get {
                return this.attributeLinesField;
            }
            set {
                this.attributeLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] DisplayAttributes {
            get {
                return this.displayAttributesField;
            }
            set {
                this.displayAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string SearchString {
            get {
                return this.searchStringField;
            }
            set {
                this.searchStringField = value;
            }
        }
        
        /// <remarks/>
        public int ResultLimit {
            get {
                return this.resultLimitField;
            }
            set {
                this.resultLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.kindredhealthcare.com/")]
    public partial class ImportConfiguration {
        
        private string docuTypeField;
        
        private string docuFolderPathField;
        
        private object[][] propertyListField;
        
        private string lifeCyclePolicyNameField;
        
        private int numberOfPromotesField;
        
        /// <remarks/>
        public string DocuType {
            get {
                return this.docuTypeField;
            }
            set {
                this.docuTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DocuFolderPath {
            get {
                return this.docuFolderPathField;
            }
            set {
                this.docuFolderPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] PropertyList {
            get {
                return this.propertyListField;
            }
            set {
                this.propertyListField = value;
            }
        }
        
        /// <remarks/>
        public string LifeCyclePolicyName {
            get {
                return this.lifeCyclePolicyNameField;
            }
            set {
                this.lifeCyclePolicyNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfPromotes {
            get {
                return this.numberOfPromotesField;
            }
            set {
                this.numberOfPromotesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessTasksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LDAPUpdateUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LDAPUpdateGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LDAPUpdateMembershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckObjectIDCompletedEventHandler(object sender, CheckObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckObjectID1CompletedEventHandler(object sender, CheckObjectID1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckObjectID1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckObjectID1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLookUpValuesCompletedEventHandler(object sender, GetLookUpValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookUpValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookUpValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Search1CompletedEventHandler(object sender, Search1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Search1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Search1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportDocumentContentByPathCompletedEventHandler(object sender, ExportDocumentContentByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDocumentContentByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDocumentContentByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string contentType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportDocumentsContentByPathCompletedEventHandler(object sender, ExportDocumentsContentByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDocumentsContentByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDocumentsContentByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] contentTypes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportDocumentContentByChronicleIDCompletedEventHandler(object sender, ExportDocumentContentByChronicleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDocumentContentByChronicleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDocumentContentByChronicleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string contentType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportDocumentsContentByChronicleIDCompletedEventHandler(object sender, ExportDocumentsContentByChronicleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDocumentsContentByChronicleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDocumentsContentByChronicleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] contentTypes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FileBrowseCompletedEventHandler(object sender, FileBrowseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileBrowseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileBrowseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportDocumentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportDocumentContentCompletedEventHandler(object sender, ImportDocumentContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportDocumentsContentCompletedEventHandler(object sender, ImportDocumentsContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDocumentsContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDocumentsContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, DeleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDocumentPropertiesCompletedEventHandler(object sender, UpdateDocumentPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591