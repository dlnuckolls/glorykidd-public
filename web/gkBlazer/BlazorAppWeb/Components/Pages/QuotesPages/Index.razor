@page "/quotes"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorAppWeb.Models
@using BlazorAppWeb.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorAppWeb.Data.BlazorAppWebQuotesContext> DbFactory

<PageTitle>Quotes</PageTitle>

<h1>Quotes</h1>

<p>
    <a href="quotes/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredQuotes">
    <PropertyColumn Property="quotes => quotes.Author" />
    <PropertyColumn Property="quotes => quotes.Quote" />
    <PropertyColumn Property="quotes => quotes.LastUsedDate" />
    <PropertyColumn Property="quotes => quotes.Count" />

    <TemplateColumn Context="quotes">
        <a href="@($"quotes/edit?id={quotes.Id}")">Edit</a> |
        <a href="@($"quotes/details?id={quotes.Id}")">Details</a> |
        <a href="@($"quotes/delete?id={quotes.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private BlazorAppWebQuotesContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();

    [SupplyParameterFromQuery]
    private string? AuthorFilter { get; set; }

    private IQueryable<Quotes> FilteredQuotes =>
    context.Quotes.Where(m => m.Author!.Contains(AuthorFilter ?? string.Empty));

}
